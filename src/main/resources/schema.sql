DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS item CASCADE;
DROP TABLE IF EXISTS booking CASCADE;
DROP TABLE IF EXISTS comment CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255)                            NOT NULL,
    email   varchar(512)                            NOT NULL,
    CONSTRAINT pk_user_id PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item
(
    item_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id    BIGINT                                  NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description TEXT                                    NOT NULL,
    available   BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_item_id PRIMARY KEY (item_id),
    CONSTRAINT fk_owner_id FOREIGN KEY (owner_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS booking
(
    booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    item_id    BIGINT                                  NOT NULL,
    booker_id  BIGINT                                  NOT NULL,
    status     VARCHAR(30) DEFAULT 'WAITING',
    CONSTRAINT pk_booking_id PRIMARY KEY (booking_id),
    CONSTRAINT fk_item_id FOREIGN KEY (item_id) REFERENCES item (item_id) ON DELETE CASCADE,
    CONSTRAINT fk_booker_id FOREIGN KEY (booker_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comment
(
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text TEXT NOT NULL,
    item_id BIGINT NOT NULL,
    author BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_comment_id PRIMARY KEY (comment_id),
    CONSTRAINT fk_item_id FOREIGN KEY (item_id) REFERENCES item (item_id) ON DELETE CASCADE,
    CONSTRAINT fk_author_id FOREIGN KEY (author) REFERENCES users (user_id) ON DELETE CASCADE
);